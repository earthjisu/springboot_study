<div class="card m-2" id="comments-new">
    <div class="card-body">
        <!-- 댓글 작성 폼-->
        <form>
            <!-- 닉네임 입력 -->
            <div class="mb-3">
                <label class="form-label">닉네임</label>
                <input type="text" class="form-control form-control-sm" id="new-comment-nickname">
            </div>
            <!-- 댓글 본문 입력 -->
            <div class="mb-3">
                <label class="form-label">댓글 내용</label>
                <textarea type="text" class="form-control form-control-sm" rows="3" id="new-comment-body"></textarea>
            </div>
            <!-- 히든 인풋 -->
            {{#article}}   <!--댓글은 게시글에 포함되기 때문에 article의 id를 hidden input으로 가져야 함-->
                <input type="hidden" id="new-comment-article-id" value="{{id}}">
            {{/article}}
            <!-- 전송 버튼 -->
            <button type="button" class="btn btn-outline-primary btn-sm" id="comment-create-btn">댓글 작성</button>
        </form>
    </div>
</div>

<script>
{
    // 댓글 작성 버튼을 변수화(id가 comment-create-btn인 대상)
    const commentCreateBtn = document.querySelector("#comment-create-btn");  //const: 변하지 않는 상수값으로 설정

    //버튼 클릭 이벤트를 감지 -> 클릭시 함수 수행
    commentCreateBtn.addEventListener("click", function() {
        console.log("버튼이 클릭되었습니다.");

        //새 댓글 JS 객체 생성
        const comment = {
            nickname: document.querySelector("#new-comment-nickname").value,  //id값은 #으로 가져옴
            body: document.querySelector("#new-comment-body").value,
            article_id: document.querySelector("#new-comment-article-id").value
        };

        //댓글 객체 출력
        console.log(comment);

        //JS로 RestAPI 호출 => fetch() : Talend API요청을 JavaScript로 보내줌
        const url = "/api/articles/" + comment.article_id + "/comments";
        fetch(url, {
            method: "post",       //post요청
            body: JSON.stringify(comment),    //comment JS객체를 JSON으로 변환해서 보내기
            headers: {      //fetch메소드는 url과 {} 두 개의 인자를 받음.
                "Content-Type": "application/json"   //body에 있는 것이 JSON타입임을 명시해서 보냄
            }
        }).then(response => {
            // http 응답 코드에 따른 메시지 출력
            const msg = (response.ok) ? "댓글이 등록되었습니다." : "댓글 등록 실패..!";
            alert(msg);
            // 현재 페이지 새로고침
            window.location.reload();
        });
    });
}
</script>